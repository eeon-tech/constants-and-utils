{"version":3,"file":"index.module.js","sources":["../src/cache/index.js","../src/environment/index.js","../src/formatNumbers/index.js","../src/_private/index.js","../src/IEX/index.js","../src/jobs/index.js","../src/subscriptionPlans/index.js","../src/valueBuckets/index.js","../src/lists/index.js","../src/macros/index.js","../src/predicates/index.js","../src/scores/index.js","../src/search/index.js","../src/sorting/index.js","../src/utils/index.js"],"sourcesContent":["const convertToMS = (value) => value * 1000\n\nexport const cachePeriodsInMS = {\n  '1m': convertToMS(60),\n  '2m': convertToMS(120),\n  '3m': convertToMS(180),\n  '4m': convertToMS(240),\n  '5m': convertToMS(300),\n  '15m': convertToMS(900),\n  '1h': convertToMS(3600),\n  '4h': convertToMS(14400),\n  '6h': convertToMS(21600),\n  '8h': convertToMS(28800),\n  '12h': convertToMS(43200),\n  '1D': convertToMS(86400),\n  '5D': convertToMS(432000),\n  '10D': convertToMS(864000),\n  '14D': convertToMS(1209600),\n  '1M': convertToMS(2592000),\n  '6M': convertToMS(15552000),\n}\n","import get from 'lodash/get'\nimport isEqual from 'lodash/isEqual'\nimport fIsEqual from 'lodash/fp/isEqual'\n\nconst isEnabled = fIsEqual('enabled')\n\nexport const isIEXSandbox = (env = process.env) =>\n  isEqual('sandbox', get(env, 'IEX_ENVIRONMENT'), false)\n\nexport const getArenaPassword = (env = process.env) =>\n  get(env, ['ARENA_PASSWORD'])\n\nexport const getArenaUsername = (env = process.env) =>\n  get(env, ['ARENA_PASSWORD'])\n\nexport const getCloudinaryAPIKey = (env = process.env) =>\n  get(env, ['CLOUDINARY_API_KEY'])\n\nexport const getCloudinaryAPISecret = (env = process.env) =>\n  get(env, ['CLOUDINARY_API_SECRET'])\n\nexport const getCloudinaryCloudName = (env = process.env) =>\n  get(env, ['CLOUDINARY_CLOUD_NAME'])\n\nexport const getDatabaseHost = (env = process.env) =>\n  get(env, ['DATABASE_HOST'], 'localhost')\n\nexport const getDatabaseName = (env = process.env) =>\n  get(env, ['DATABASE_NAME'], 'test')\n\nexport const getDatabasePassword = (env = process.env) =>\n  get(env, ['DATABASE_PASSWORD'], 'password')\n\nexport const getDatabasePort = (env = process.env) =>\n  get(env, ['DATABASE_PORT'], '27017')\n\nexport const getDatabaseUsername = (env = process.env) =>\n  get(env, ['DATABASE_USERNAME'], 'user')\n\nexport const getEEONEnvironment = (env = process.env) =>\n  get(env, ['EEON_ENVIRONMENT'], 'development')\n\nexport const getIEXPublishableToken = (env = process.env) =>\n  isIEXSandbox(env)\n    ? get(env, ['IEX_SANDBOX_PUBLISHABLE_TOKEN'])\n    : get(env, 'IEX_PUBLISHABLE_TOKEN')\n\nexport const getIEXRESTfulBaseURL = (env = process.env) =>\n  isIEXSandbox(env)\n    ? 'https://sandbox.iexapis.com/stable'\n    : 'https://cloud.iexapis.com/stable'\n\nexport const getIEXSecretToken = (env = process.env) =>\n  isIEXSandbox(env)\n    ? get(env, ['IEX_SANDBOX_SECRET_TOKEN'])\n    : get(env, ['IEX_SECRET_TOKEN'])\n\nexport const getIEXStreamingBaseURL = (env = process.env) =>\n  isIEXSandbox(env)\n    ? 'https://sandbox-sse.iexapis.com/stable'\n    : 'https://cloud-sse.iexapis.com/stable'\n\nexport const getIEXAPIVersion = () => 'stable'\n\nexport const getIntercomAccessToken = (env = process.env) =>\n  get(env, ['INTERCOM_ACCESS_TOKEN'])\n\nexport const getRedisHost = (env = process.env) => get(env, ['REDIS_HOST'])\n\nexport const getRedisPassword = (env = process.env) =>\n  get(env, ['REDIS_PASSWORD'])\n\nexport const getRedisPort = (env = process.env) => get(env, ['REDIS_PORT'])\n\nexport const getSendgridAPIKey = (env = process.env) =>\n  get(env, ['SENDGRID_API_KEY'])\n\nexport const getStockNewsAPIToken = (env = process.env) =>\n  get(env, ['STOCK_NEWS_API_API_KEY'])\n\nexport const getStripeBasicPlanId = (env = process.env) =>\n  get(env, ['STRIPE_BASIC_PLAN_ID'])\n\nexport const getStripeInvestorPlanId = (env = process.env) =>\n  get(env, ['STRIPE_INVESTOR_PLAN_ID'])\n\nexport const getStripeProfessionalPlanId = (env = process.env) =>\n  get(env, ['STRIPE_PROFESSIONAL_PLAN_ID'])\n\nexport const getStripeSecretKey = (env = process.env) =>\n  get(env, ['STRIPE_SECRET_KEY'])\n\nexport const isStreamingEnabled = (env = process.env) =>\n  isEnabled(get(env, ['FEATURES_STREAMING']))\n","import toUpper from 'lodash/toUpper'\nimport toNumber from 'lodash/fp/toNumber'\nimport pipe from 'lodash/fp/pipe'\nimport lt from 'lodash/fp/lt'\nimport isUndefined from 'lodash/isUndefined'\nimport isNull from 'lodash/isNull'\nimport isFunction from 'lodash/isFunction'\nimport isEqual from 'lodash/isEqual'\nimport gt from 'lodash/fp/gt'\nimport get from 'lodash/get'\nimport fIsEqual from 'lodash/fp/isEqual'\nimport complement from 'lodash/fp/complement'\nconst numbro = require('numbro')\n\n/**\n * Creates EEON-specific parsing language\n * See spec: https://numbrojs.com/languages.html\n */\nnumbro.registerLanguage({\n  abbreviations: {\n    thousand: 'K',\n    million: 'M',\n    billion: 'B',\n    trillion: 'T',\n  },\n  currency: {\n    symbol: '$',\n    position: 'prefix',\n    code: 'USD',\n  },\n  delimiters: {\n    thousands: ',',\n    decimal: '.',\n  },\n  languageTag: 'en-EEON',\n  ordinal: () => '',\n})\nnumbro.setLanguage('en-EEON')\n\n/**\n * ECharts formatter doesn't support use of external libs so we have our own little formatter\n */\nexport const formatChartNumber = (rawValue) => {\n  const value = Math.abs(rawValue)\n  const ONE_THOUSAND = 1000\n  const ONE_MILLION = 1000000\n  const ONE_BILLION = 1000000000\n  const ONE_TRILLION = 1000000000000\n  const ONE_QUADRILLION = 1000000000000000\n  const prefix = rawValue < 0 ? '-' : ''\n  if (value < ONE_THOUSAND) {\n    return value\n  }\n  if (value < ONE_MILLION) {\n    return `${prefix}${value / ONE_THOUSAND}K`\n  }\n  if (value < ONE_BILLION) {\n    return `${prefix}${value / ONE_MILLION}M`\n  }\n  if (value < ONE_TRILLION) {\n    return `${prefix}${value / ONE_BILLION}B`\n  }\n  if (value < ONE_QUADRILLION) {\n    return `${prefix}${value / ONE_TRILLION}T`\n  }\n}\n\n/**\n * Takes a number and formats it nicely into a human-readable string\n * e.g. 38400000000 --> 38.4B\n */\nexport const formatNumberNicely = (value, args = {}) => {\n  const { currency, percentage, ...rest } = args\n\n  if (\n    isNull(value) ||\n    isUndefined(value) ||\n    !isFunction(get(value, ['toString']))\n  ) {\n    return 'N/A'\n  }\n\n  if (currency) {\n    return numbro(value).formatCurrency(rest)\n  }\n\n  if (percentage) {\n    return numbro(value).format({ ...rest, output: 'percent' })\n  }\n\n  return numbro(value).format(rest)\n}\n\nexport const isEven = (value) => isEqual(value % 2, 0)\n\nexport const isGreaterThanZero = pipe(toNumber, gt(0))\n\nexport const isLessThanZero = pipe(toNumber, lt(0))\n\nexport const isOdd = complement(isEven)\n\nexport const isZero = fIsEqual(0)\n\nexport const prefixValueWithCurrencySymbol = (value) =>\n  formatNumberNicely(value, { currency: true })\n\nexport const suffixValueWithPercentSymbol = (value) =>\n  formatNumberNicely(value, { percentage: true })\n\n/**\n * Takes a string and unformats it into a raw number\n * e.g. 38B --> 38000000000\n */\nexport const unformatNiceNumber = (value = '', { unformatter } = {}) => {\n  if (isFunction(unformatter)) {\n    return unformatter(value)\n  }\n\n  const uppercased = toUpper(value)\n\n  // We have to do this because of the Byte formatter in Numbro\n  const isBillions = uppercased.includes('B')\n\n  if (isBillions) {\n    const trimmed = uppercased.replace('B', '')\n    const unformatted = numbro.unformat(trimmed)\n    return unformatted * 1000000000\n  }\n\n  return numbro.unformat(uppercased)\n}\n","import toLower from 'lodash/toLower'\nimport toUpper from 'lodash/toUpper'\nimport mapValues from 'lodash/fp/mapValues'\nimport pipe from 'lodash/fp/pipe'\nimport keymirror from 'keymirror'\n\nconst convertValuesToLower = mapValues(toLower)\n\nconst convertValuesToUpper = mapValues(toUpper)\n\nexport const keymirrorLower = pipe(keymirror, convertValuesToLower)\n\nexport const keymirrorUpper = pipe(keymirror, convertValuesToUpper)\n","import { keymirrorLower, keymirrorUpper } from '../_private'\n\nexport const announceTimes = keymirrorUpper({\n  AMC: null,\n  BTO: null,\n  OTHER: null,\n})\n\nexport const periods = keymirrorLower({\n  ANNUAL: null,\n  QUARTERLY: null,\n})\n\nexport const securityTypes = keymirrorLower({\n  AD: null, // ADR\n  RE: null, // REIT\n  CE: null, // Closed end fund\n  SI: null, // Secondary Issue\n  LP: null, // Limited Partnership\n  CS: null, // Common Stock\n  ET: null, // ETF\n  WT: null, // Warrant\n  OEF: null, // Open Ended Fund\n  CEF: null, // Closed Ended Fund\n  PS: null, // Preferred Stock\n})\n\nexport const timeframes = {\n  FIVE_DAYS: '5d',\n  FIVE_YEARS: '5y',\n  ONE_MONTH: '1m',\n  ONE_YEAR: '1y',\n  SIX_MONTHS: '6m',\n  THREE_MONTHS: '3m',\n  TWO_YEARS: '2y',\n}\n\nexport const timeRanges = {\n  FIVE_DAYS: '5d',\n  FIVE_YEARS: '5y',\n  ONE_MONTH: '1m',\n  ONE_YEAR: '1Y',\n  SIX_MONTHS: '6M',\n  THREE_MONTHS: '3M',\n  TWO_YEARS: '2Y',\n  YTD: 'ytd',\n}\n\nexport const LIVE = 'live'\n","import keymirror from 'keymirror'\n\n/**\n * Names of the jobs\n */\nexport const queueNames = keymirror({\n  calculateDerivedSecurityMetrics: null,\n  calculateEEONPerformanceScores: null,\n  calculateMacroIndicators: null,\n  calculateMarketInsights: null,\n  calculateSecurityInsights: null,\n  collectFinancialStatementsUponEarnings: null,\n  fetchUpcomingEvents: null,\n  primeCache: null,\n  runPreMarketJobs: null,\n  runDailyEEONScreenerlists: null,\n  runDailyUserScreenerlists: null,\n  runHourlyEEONScreenerlists: null,\n  runHourlyUserScreenerlists: null,\n  sendRealtimeSecurities: null,\n  sendUserSecurityAlertMessages: null,\n  storeRealtimeData: null,\n  triggerUserSecurityAlerts: null,\n})\n","import { keymirrorLower, keymirrorUpper } from '../_private'\n\nexport const stripeCardStatuses = keymirrorLower({\n  CANCELED: null,\n  CHARGEABLE: null,\n  CONSUMED: null,\n  FAILED: null,\n  PENDING: null,\n})\n\nexport const stripeCouponDurations = keymirrorLower({\n  FOREVER: null,\n  ONCE: null,\n  REPEATING: null,\n})\n\nexport const stripePlans = keymirrorUpper({\n  BASIC: null,\n  INVESTOR: null,\n})\n\nexport const stripeSubscriptionStatuses = keymirrorLower({\n  ACTIVE: null,\n  CANCELED: null,\n  INCOMPLETED_EXPIRED: null,\n  INCOMPLETE: null,\n  PAST_DUE: null,\n  TRIALING: null,\n  UNPAID: null,\n})\n","/**\n * Pre-defined value buckets for Alert and Screener Criteria\n * These are solely values, predicates are separate and can be applied to a bucket\n */\nimport _ from 'lodash'\nimport toString from 'lodash/toString'\nimport multiply from 'lodash/multiply'\nimport { formatNumberNicely } from '../formatNumbers'\n\nexport const createPercentageValueBucket = (value, label) => ({\n  formattedValue: formatNumberNicely(value, {\n    percentage: true,\n    mantissa: 2,\n  }),\n  label,\n  value,\n})\n\nexport const createEEONPerformanceScoreValueBucket = (value, label) => ({\n  formattedValue: toString(multiply(value, 100)),\n  label,\n  value,\n})\n\nexport const createNumericValueBucket = (\n  value,\n  label,\n  priceValueBucketsOverrides = {}\n) => ({\n  formattedValue: formatNumberNicely(value, {\n    average: true,\n    ...priceValueBucketsOverrides,\n  }),\n  label,\n  value,\n})\n\nexport const createIdentityValueBucket = (\n  value,\n  label,\n  priceValueBucketsOverrides = {}\n) => ({\n  formattedValue: value,\n  label: label,\n  value,\n})\n\nexport const betaValueBuckets = [\n  createIdentityValueBucket(0),\n  createIdentityValueBucket(0.5, 'Less volatile than market'),\n  createIdentityValueBucket(1, 'Moves with Market'),\n  createIdentityValueBucket(1.5, 'More volatile than market'),\n  createIdentityValueBucket(2),\n]\n\nexport const dividendYieldValueBuckets = [\n  createPercentageValueBucket(0, 'No Dividend'),\n  createPercentageValueBucket(0.01),\n  createPercentageValueBucket(0.02),\n  createPercentageValueBucket(0.03, 'Pretty good'),\n  createPercentageValueBucket(0.04),\n  createPercentageValueBucket(0.05),\n  createPercentageValueBucket(0.06),\n  createPercentageValueBucket(0.07),\n  createPercentageValueBucket(0.08),\n]\n\nexport const earningsYieldValueBuckets = [\n  createPercentageValueBucket(-0.5),\n  createPercentageValueBucket(-0.4),\n  createPercentageValueBucket(-0.3),\n  createPercentageValueBucket(-0.2),\n  createPercentageValueBucket(-0.1),\n  createPercentageValueBucket(-0.05),\n  createPercentageValueBucket(0),\n  createPercentageValueBucket(0.05),\n  createPercentageValueBucket(0.1),\n  createPercentageValueBucket(0.2),\n  createPercentageValueBucket(0.3),\n  createPercentageValueBucket(0.4),\n  createPercentageValueBucket(0.5),\n]\n\nexport const EBITDAValueBuckets = [\n  createNumericValueBucket(0, 'Profitable'),\n  createNumericValueBucket(1000000),\n  createNumericValueBucket(5000000),\n  createNumericValueBucket(10000000, 'Small'),\n  createNumericValueBucket(25000000),\n  createNumericValueBucket(50000000),\n  createNumericValueBucket(100000000, 'Midsized'),\n  createNumericValueBucket(150000000),\n  createNumericValueBucket(200000000),\n  createNumericValueBucket(250000000),\n  createNumericValueBucket(500000000),\n  createNumericValueBucket(750000000),\n  createNumericValueBucket(1000000000, 'Large'),\n  createNumericValueBucket(5000000000),\n  createNumericValueBucket(10000000000, 'Mega'),\n  createNumericValueBucket(20000000000),\n  createNumericValueBucket(50000000000),\n  createNumericValueBucket(10000000000),\n  createNumericValueBucket(25000000000),\n  createNumericValueBucket(50000000000),\n]\n\nexport const EEONPerformanceScoresValueBuckets = [\n  createEEONPerformanceScoreValueBucket(0),\n  createEEONPerformanceScoreValueBucket(0.1),\n  createEEONPerformanceScoreValueBucket(0.2),\n  createEEONPerformanceScoreValueBucket(0.3),\n  createEEONPerformanceScoreValueBucket(0.4),\n  createEEONPerformanceScoreValueBucket(0.5),\n  createEEONPerformanceScoreValueBucket(0.6),\n  createEEONPerformanceScoreValueBucket(0.7),\n  createEEONPerformanceScoreValueBucket(0.8),\n  createEEONPerformanceScoreValueBucket(0.9),\n  createEEONPerformanceScoreValueBucket(1),\n]\n\nexport const employeesValueBuckets = [\n  createNumericValueBucket(100),\n  createNumericValueBucket(1000),\n  createNumericValueBucket(5000),\n  createNumericValueBucket(10000),\n  createNumericValueBucket(25000),\n  createNumericValueBucket(50000),\n  createNumericValueBucket(100000),\n]\n\nconst marketCapValueOverrides = { currency: true }\nexport const marketCapValueBuckets = [\n  createNumericValueBucket(50000000, 'Micro-cap', marketCapValueOverrides),\n  createNumericValueBucket(100000000, 'Tiny-cap', marketCapValueOverrides),\n  createNumericValueBucket(500000000, 'Small-cap', marketCapValueOverrides),\n  createNumericValueBucket(1000000000, marketCapValueOverrides),\n  createNumericValueBucket(5000000000, marketCapValueOverrides),\n  createNumericValueBucket(10000000000, 'Mid-cap', marketCapValueOverrides),\n  createNumericValueBucket(50000000000, marketCapValueOverrides),\n  createNumericValueBucket(100000000000, marketCapValueOverrides),\n  createNumericValueBucket(200000000000, 'Large-cap', marketCapValueOverrides),\n  createNumericValueBucket(500000000000, 'Mega-cap', marketCapValueOverrides),\n]\n\nexport const pegRatioValueBuckets = [\n  createNumericValueBucket(0),\n  createNumericValueBucket(1, 'Fair value'),\n  createNumericValueBucket(2),\n  createNumericValueBucket(3),\n]\n\nexport const peRatioValueBuckets = [\n  createNumericValueBucket(0),\n  createNumericValueBucket(5),\n  createNumericValueBucket(10),\n  createNumericValueBucket(15),\n  createNumericValueBucket(20),\n  createNumericValueBucket(25),\n  createNumericValueBucket(30),\n  createNumericValueBucket(35),\n  createNumericValueBucket(40),\n]\n\nexport const percentageValueBuckets = [\n  createPercentageValueBucket(-0.3),\n  createPercentageValueBucket(-0.25),\n  createPercentageValueBucket(-0.2),\n  createPercentageValueBucket(-0.15),\n  createPercentageValueBucket(-0.1),\n  createPercentageValueBucket(-0.09),\n  createPercentageValueBucket(-0.08),\n  createPercentageValueBucket(-0.07),\n  createPercentageValueBucket(-0.06),\n  createPercentageValueBucket(-0.05),\n  createPercentageValueBucket(-0.04),\n  createPercentageValueBucket(-0.03),\n  createPercentageValueBucket(-0.02),\n  createPercentageValueBucket(-0.01),\n  createPercentageValueBucket(0),\n  createPercentageValueBucket(0.01),\n  createPercentageValueBucket(0.02),\n  createPercentageValueBucket(0.03),\n  createPercentageValueBucket(0.04),\n  createPercentageValueBucket(0.05),\n  createPercentageValueBucket(0.06),\n  createPercentageValueBucket(0.07),\n  createPercentageValueBucket(0.08),\n  createPercentageValueBucket(0.09),\n  createPercentageValueBucket(0.1),\n  createPercentageValueBucket(0.15),\n  createPercentageValueBucket(0.2),\n  createPercentageValueBucket(0.25),\n  createPercentageValueBucket(0.3),\n]\n\nconst priceValueBucketsOverrides = { currency: true }\nexport const priceValueBuckets = [\n  createNumericValueBucket(10, priceValueBucketsOverrides),\n  createNumericValueBucket(15, priceValueBucketsOverrides),\n  createNumericValueBucket(20, priceValueBucketsOverrides),\n  createNumericValueBucket(25, priceValueBucketsOverrides),\n  createNumericValueBucket(30, priceValueBucketsOverrides),\n  createNumericValueBucket(40, priceValueBucketsOverrides),\n  createNumericValueBucket(50, priceValueBucketsOverrides),\n  createNumericValueBucket(75, priceValueBucketsOverrides),\n  createNumericValueBucket(100, priceValueBucketsOverrides),\n  createNumericValueBucket(150, priceValueBucketsOverrides),\n  createNumericValueBucket(200, priceValueBucketsOverrides),\n  createNumericValueBucket(250, priceValueBucketsOverrides),\n  createNumericValueBucket(500, priceValueBucketsOverrides),\n  createNumericValueBucket(750, priceValueBucketsOverrides),\n  createNumericValueBucket(1000, priceValueBucketsOverrides),\n  createNumericValueBucket(2000, priceValueBucketsOverrides),\n]\n\nexport const priceToBookValueBuckets = [\n  createNumericValueBucket(1, 'Low'),\n  createNumericValueBucket(2),\n  createNumericValueBucket(3),\n  createNumericValueBucket(4),\n  createNumericValueBucket(5, 'High'),\n  createNumericValueBucket(6),\n  createNumericValueBucket(7),\n  createNumericValueBucket(8),\n  createNumericValueBucket(9),\n  createNumericValueBucket(10),\n]\n\nexport const profitMarginValueBuckets = [\n  createPercentageValueBucket(0),\n  createPercentageValueBucket(0.1),\n  createPercentageValueBucket(0.15),\n  createPercentageValueBucket(0.2),\n  createPercentageValueBucket(0.25),\n  createPercentageValueBucket(0.3),\n  createPercentageValueBucket(0.5),\n  createPercentageValueBucket(0.75, '🔥'),\n]\n\nconst revenueValueBucketOverrides = { currency: true }\nexport const revenueValueBuckets = [\n  createNumericValueBucket(50000000, 'Small', revenueValueBucketOverrides),\n  createNumericValueBucket(100000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(250000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(500000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(1000000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(10000000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(25000000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(50000000000, null, revenueValueBucketOverrides),\n  createNumericValueBucket(100000000000, 'Mega', revenueValueBucketOverrides),\n]\n\nconst revenuePerEmployeeValueBucketOverrides = { currency: true }\nexport const revenuePerEmployeeValueBuckets = [\n  createNumericValueBucket(\n    100000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    200000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    300000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    400000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    500000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    750000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n  createNumericValueBucket(\n    1000000,\n    null,\n    revenuePerEmployeeValueBucketOverrides\n  ),\n]\n\nconst revenuePerShareValueBucketOverrides = { currency: true }\nexport const revenuePerShareValueBuckets = [\n  createNumericValueBucket(0, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(5, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(10, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(15, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(25, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(50, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(100, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(250, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(500, null, revenuePerShareValueBucketOverrides),\n  createNumericValueBucket(1000, null, revenuePerShareValueBucketOverrides),\n]\n\nexport const RSIValueBuckets = [\n  createNumericValueBucket(0),\n  createNumericValueBucket(10),\n  createNumericValueBucket(20),\n  createNumericValueBucket(30),\n  createNumericValueBucket(40),\n  createNumericValueBucket(50),\n  createNumericValueBucket(60),\n  createNumericValueBucket(70),\n  createNumericValueBucket(80),\n  createNumericValueBucket(90),\n  createNumericValueBucket(100),\n]\n\nexport const ttmEPSValueBuckets = [\n  createNumericValueBucket(0),\n  createNumericValueBucket(5),\n  createNumericValueBucket(10),\n  createNumericValueBucket(15),\n  createNumericValueBucket(20),\n  createNumericValueBucket(25),\n  createNumericValueBucket(30),\n  createNumericValueBucket(35),\n  createNumericValueBucket(40),\n  createNumericValueBucket(45),\n  createNumericValueBucket(50),\n]\n\nexport const volumeValueBuckets = [\n  createNumericValueBucket(100000),\n  createNumericValueBucket(500000),\n  createNumericValueBucket(1000000),\n  createNumericValueBucket(5000000),\n  createNumericValueBucket(10000000),\n]\n","import _ from 'lodash'\nimport has from 'lodash/has'\nimport divide from 'lodash/divide'\nimport isEqual from 'lodash/isEqual'\nimport flatten from 'lodash/flatten'\nimport values from 'lodash/values'\nimport multiply from 'lodash/multiply'\nimport pipe from 'lodash/fp/pipe'\nimport toNumber from 'lodash/fp/toNumber'\nimport { stripePlans } from '../subscriptionPlans'\nimport { formatNumberNicely } from '../formatNumbers'\nimport {\n  betaValueBuckets,\n  dividendYieldValueBuckets,\n  earningsYieldValueBuckets,\n  EBITDAValueBuckets,\n  EEONPerformanceScoresValueBuckets,\n  employeesValueBuckets,\n  marketCapValueBuckets,\n  pegRatioValueBuckets,\n  peRatioValueBuckets,\n  percentageValueBuckets,\n  priceValueBuckets,\n  priceToBookValueBuckets,\n  profitMarginValueBuckets,\n  revenueValueBuckets,\n  revenuePerEmployeeValueBuckets,\n  revenuePerShareValueBuckets,\n  RSIValueBuckets,\n  ttmEPSValueBuckets,\n  volumeValueBuckets,\n} from '../valueBuckets'\n\n/**\n * ====================\n * Subscription plans\n * ====================\n */\nconst { BASIC, INVESTOR } = stripePlans\n\n/**\n * ====================\n * Relating a specific metric to a database model\n * ====================\n */\nexport const metricRelations = {\n  ADVANCED_STATS: 'AdvancedStats',\n  DERIVED_SECURITY_METRICS: 'DerivedSecurityMetric',\n  EEON_PERFORMANCE_SCORES: 'EEONPerformanceScore',\n  KEY_STATS: 'KeyStats',\n  QUOTE: 'Quote',\n  TECHNICAL_INDICATORS: 'TechnicalIndicator',\n}\n\n/**\n * ====================\n * All Supported Metrics\n * These are used for both Heatmap Filters, Screeners, and Alerts\n * ====================\n */\n/**\n * Transforms\n */\nexport const averageTransform = (value = 0) =>\n  formatNumberNicely(value, { average: true })\n\nexport const averageCurrencyTransform = (value = 0) =>\n  formatNumberNicely(value, { average: true, currency: true, mantissa: 1 })\n\nexport const betaTransform = (value = 0) =>\n  formatNumberNicely(value, { mantissa: 2 })\n\nexport const currencyTransform = (value = 0) =>\n  formatNumberNicely(value, { currency: true, mantissa: 2 })\n\nexport const percentageTransform = (value = 0) =>\n  formatNumberNicely(value, { mantissa: 2, percentage: true })\n\nexport const percentageValueTransform = (value = 0) => {\n  const toValue = multiply(value, 100)\n  return formatNumberNicely(toValue, { mantissa: 0 })\n}\n\nexport const ratioTransform = (value = 0) =>\n  formatNumberNicely(value, { mantissa: 2 })\n\nexport const volumeTransform = (value = 0) =>\n  formatNumberNicely(value, { average: true, totalLength: 4 })\n\nexport const EEONPerformanceScoreUnformatter = pipe(toNumber, (number) =>\n  divide(number, 100)\n)\n\n/**\n * 10 Day Average Trading Volume\n */\nexport const avg10Volume = {\n  valueBuckets: volumeValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'avg10Volume',\n  label: '10 Day Average Volume',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '10D Avg. Volume',\n  transform: volumeTransform,\n}\n\n/**\n * 30 Day Average Trading Volume\n */\nexport const avg30Volume = {\n  valueBuckets: volumeValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'avg30Volume',\n  label: '30 Day Average Volume',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '30D Avg. Volume',\n  transform: volumeTransform,\n}\n\n/**\n * Beta\n */\nexport const beta = {\n  valueBuckets: betaValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'beta',\n  label: 'Beta',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Beta',\n  transform: betaTransform,\n}\n\n/**\n * Change\n */\nexport const change = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'change',\n  label: 'Change',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Change',\n  transform: currencyTransform,\n}\n\n/**\n * Percent Change\n */\nexport const changePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'changePercent',\n  label: '1-day Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '1D %',\n  transform: percentageTransform,\n}\n\nexport const close = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'close',\n  label: 'Close',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Close',\n  transform: currencyTransform,\n}\n\nexport const currentDebt = {\n  valueBuckets: marketCapValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'currentDebt',\n  label: 'Current Debt',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Current Debt',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * 14 Day RSI\n */\nexport const day14RSI = {\n  valueBuckets: RSIValueBuckets,\n  databaseModelName: metricRelations.TECHNICAL_INDICATORS,\n  id: 'day14RSI',\n  label: '14 Day RSI',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'RSI',\n  transform: averageTransform,\n}\n\n/**\n * 30 Day Percent Change\n */\nexport const day30ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'day30ChangePercent',\n  label: '30-day Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '30D %',\n  transform: percentageTransform,\n}\n\n/**\n * 5 Day Percent Change\n */\nexport const day5ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'day5ChangePercent',\n  label: '5-day Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '5D %',\n  transform: percentageTransform,\n}\n\n/**\n * 50 Day Moving Average\n */\nexport const day50MovingAvg = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'day50MovingAvg',\n  label: '50 Day Moving Average',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '50D Moving Avg.',\n  transform: currencyTransform,\n}\n\n/**\n * 200 Day Moving Average\n */\nexport const day200MovingAvg = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'day200MovingAvg',\n  label: '200 Day Moving Average',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '200D Moving Avg.',\n  transform: currencyTransform,\n}\n\nexport const debtToEquity = {\n  valueBuckets: peRatioValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'debtToEquity',\n  label: 'Debt to Equity',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Debt / Equity',\n  transform: ratioTransform,\n}\n\n/**\n * Dividend Yield\n */\nexport const dividendYield = {\n  valueBuckets: dividendYieldValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'dividendYield',\n  label: 'Dividend Yield',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Div. Yield',\n  transform: percentageTransform,\n}\n\n/**\n * Earnings Yield\n */\nexport const earningsYield = {\n  valueBuckets: earningsYieldValueBuckets,\n  databaseModelName: metricRelations.DERIVED_SECURITY_METRICS,\n  id: 'earningsYield',\n  label: 'Earnings Yield',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Earnings Yield',\n  transform: percentageTransform,\n}\n\n/**\n * EBITDA\n */\nexport const EBITDA = {\n  valueBuckets: EBITDAValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'EBITDA',\n  label: 'EBITDA',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'EBITDA',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * EEON Growth Score\n */\nexport const EEONGrowthScore = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'growthScore',\n  label: 'EEON Growth Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Growth Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * EEON Momentum Score\n */\nexport const EEONMomentumScore = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'momentumScore',\n  label: 'EEON Momentum Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Momentum Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * EEON Profitability Score\n */\nexport const EEONProfitabilityScore = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'profitabilityScore',\n  label: 'EEON Profitability Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Profitability Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * EEON Rule of 40 Score\n */\nexport const EEONRuleOf40Score = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'ruleOf40Score',\n  label: 'EEON Scalability Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Scalability Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * EEON Safety Score\n */\nexport const EEONSafetyScore = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'safetyScore',\n  label: 'EEON Safety Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Safety Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * EEON Value Score\n */\nexport const EEONValueScore = {\n  valueBuckets: EEONPerformanceScoresValueBuckets,\n  databaseModelName: metricRelations.EEON_PERFORMANCE_SCORES,\n  id: 'valueScore',\n  label: 'EEON Value Score',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Value Score',\n  transform: percentageValueTransform,\n  unformatter: EEONPerformanceScoreUnformatter,\n}\n\n/**\n * Employees\n */\nexport const employees = {\n  valueBuckets: employeesValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'employees',\n  label: 'Employees',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Employees',\n  transform: averageTransform,\n}\n\n/**\n * Enterprise Value\n */\nexport const enterpriseValue = {\n  valueBuckets: EBITDAValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'enterpriseValue',\n  label: 'Enterprise Value',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Ent. Value',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * Enterprise Value to Revenue\n */\nexport const enterpriseValueToRevenue = {\n  valueBuckets: priceToBookValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'enterpriseValueToRevenue',\n  label: 'Enterprise Value to Revenue',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'EV/Rev',\n  transform: ratioTransform,\n}\n\n/**\n * Extended Percent Change\n */\nexport const extendedChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'extendedChangePercet',\n  label: 'After-hours Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'After-hours %',\n  transform: percentageTransform,\n}\n\n/**\n * Forward PE Ratio\n */\nexport const forwardPERatio = {\n  valueBuckets: peRatioValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'forwardPERatio',\n  label: 'Forward PE Ratio',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'For. PE Ratio',\n  transform: ratioTransform,\n}\n\n/**\n * Gross Profit\n */\nexport const grossProfit = {\n  valueBuckets: revenueValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'grossProfit',\n  label: 'Gross Profit',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Gross Profit',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * High\n */\nexport const high = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'high',\n  label: 'High',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'High',\n  transform: currencyTransform,\n}\n\n/**\n * Latest Price\n */\nexport const latestPrice = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'latestPrice',\n  label: 'Price',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Price',\n  transform: currencyTransform,\n}\n\n/**\n * Low\n */\nexport const low = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'low',\n  label: 'Low',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Low',\n  transform: currencyTransform,\n}\n\n/**\n * Market Cap\n */\nexport const marketCap = {\n  valueBuckets: marketCapValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'marketCap',\n  label: 'Market Cap.',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Market Cap.',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * 1 Month Percent Change\n */\nexport const month1ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'month1ChangePercent',\n  label: '1-month Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '1M %',\n  transform: percentageTransform,\n}\n\n/**\n * 3 Month Percent Change\n */\nexport const month3ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'month3ChangePercent',\n  label: '3-month Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '3M %',\n  transform: percentageTransform,\n}\n\n/**\n * 6 Month Percent Change\n */\nexport const month6ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'month6ChangePercent',\n  label: '6-month Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '6M %',\n  transform: percentageTransform,\n}\n\n/**\n * Open\n */\nexport const open = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'open',\n  label: 'Open',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Open',\n  transform: currencyTransform,\n}\n\n/**\n * PE Ratio\n */\nexport const peRatio = {\n  valueBuckets: peRatioValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'peRatio',\n  label: 'PE Ratio',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'PE Ratio',\n  transform: ratioTransform,\n}\n\n/**\n * PEG Ratio\n */\nexport const pegRatio = {\n  valueBuckets: pegRatioValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'pegRatio',\n  label: 'PEG Ratio',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'PEG Ratio',\n  transform: ratioTransform,\n}\n\n/**\n * Previous Close\n */\nexport const previousClose = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'previousClose',\n  label: 'Previous Close',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Prev. Close',\n  transform: currencyTransform,\n}\n\n/**\n * Previous Volume\n */\nexport const previousVolume = {\n  valueBuckets: volumeValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'previousVolume',\n  label: 'Previous Volume',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Prev. Volume',\n  transform: volumeTransform,\n}\n\n/**\n * Price to Book\n */\nexport const priceToBook = {\n  valueBuckets: priceToBookValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'priceToBook',\n  label: 'Price to Book',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'P/B',\n  transform: ratioTransform,\n}\n\n/**\n * Price to Sales\n */\nexport const priceToSales = {\n  valueBuckets: priceToBookValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'priceToSales',\n  label: 'Price to Sales',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'P/S',\n  transform: ratioTransform,\n}\n\n/**\n * Profit Margin\n */\nexport const profitMargin = {\n  valueBuckets: profitMarginValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'profitMargin',\n  label: 'Profit Margin',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Profit Margin',\n  transform: percentageTransform,\n}\n\n/**\n * Revenue\n */\nexport const revenue = {\n  valueBuckets: revenueValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'revenue',\n  label: 'Revenue',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Revenue',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * Revenue Per Employee\n */\nexport const revenuePerEmployee = {\n  valueBuckets: revenuePerEmployeeValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'revenuePerEmployee',\n  label: 'Revenue per Employee',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Revenue / Employee',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * Revenue Per Share\n */\nexport const revenuePerShare = {\n  valueBuckets: revenuePerShareValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'revenuePerShare',\n  label: 'Revenue per Share',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Revenue / Share',\n  transform: currencyTransform,\n}\n\n/**\n * Shares Outstanding\n */\nexport const sharesOutstanding = {\n  valueBuckets: revenueValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'sharesOutstanding',\n  label: 'Shares Outstanding',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Shares',\n  transform: averageTransform,\n}\n\n/**\n * TTM EPS\n */\nexport const ttmEPS = {\n  valueBuckets: ttmEPSValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'ttmEPS',\n  label: 'EPS (TTM)',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'EPS (TTM)',\n  transform: currencyTransform,\n}\n\n/**\n * Total Cash\n */\nexport const totalCash = {\n  valueBuckets: revenueValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'totalCash',\n  label: 'Total Cash',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Cash',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * Total Revenue\n */\nexport const totalRevenue = {\n  valueBuckets: revenueValueBuckets,\n  databaseModelName: metricRelations.ADVANCED_STATS,\n  id: 'totalRevenue',\n  label: 'Total Revenue',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'Total Revenue',\n  transform: averageCurrencyTransform,\n}\n\n/**\n * Return on Assets (TTM)\n */\nexport const ttmReturnOnAssets = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.DERIVED_SECURITY_METRICS,\n  id: 'ttmReturnOnAssets',\n  label: 'Return on Assets (TTM)',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'ROA (TTM)',\n  transform: percentageTransform,\n}\n\n/**\n * Return on Assets (TTM)\n */\nexport const ttmReturnOnEquity = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.DERIVED_SECURITY_METRICS,\n  id: 'ttmReturnOnEquity',\n  label: 'Return on Equity (TTM)',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'ROE (TTM)',\n  transform: percentageTransform,\n}\n\n/**\n * Volume\n */\nexport const volume = {\n  valueBuckets: volumeValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'volume',\n  label: 'Volume',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'Volume',\n  transform: volumeTransform,\n}\n\n/**\n * 52 Week Change\n */\nexport const week52change = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'week52change',\n  label: '52-week Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '52W %',\n  transform: percentageTransform,\n}\n\n/**\n * 52 Week High\n */\nexport const week52High = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'week52High',\n  label: '52 Week High',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '52W High',\n  transform: currencyTransform,\n}\n\n/**\n * 52 Week Low\n */\nexport const week52Low = {\n  valueBuckets: priceValueBuckets,\n  databaseModelName: metricRelations.QUOTE,\n  id: 'week52Low',\n  label: '52 Week Low',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '52W Low',\n  transform: currencyTransform,\n}\n\n/**\n * 1 Year Percent Change\n */\nexport const year1ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'year1ChangePercent',\n  label: '1-year Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '1Y %',\n  transform: percentageTransform,\n}\n\n/**\n * 2 Year Percent Change\n */\nexport const year2ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'year2ChangePercent',\n  label: '2-year Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '2Y %',\n  transform: percentageTransform,\n}\n\n/**\n * 5 Year Percent Change\n */\nexport const year5ChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'year5ChangePercent',\n  label: '5-year Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: '5Y %',\n  transform: percentageTransform,\n}\n\n/**\n * YTD Year Percent Change\n */\nexport const ytdChangePercent = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.KEY_STATS,\n  id: 'ytdChangePercent',\n  label: 'YTD Return',\n  requiresPlan: [BASIC, INVESTOR],\n  shortLabel: 'YTD %',\n  transform: percentageTransform,\n}\n\n/**\n * YoY EPS Growth\n */\nexport const YoYEPSGrowth = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.DERIVED_SECURITY_METRICS,\n  id: 'YoYEPSGrowth',\n  label: 'YoY EPS Growth',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'YoY EPS Grow',\n  transform: percentageTransform,\n}\n\n/**\n * YoY Revenue Growth\n */\nexport const YoYRevenueGrowth = {\n  valueBuckets: percentageValueBuckets,\n  databaseModelName: metricRelations.DERIVED_SECURITY_METRICS,\n  id: 'YoYRevenueGrowth',\n  label: 'YoY Revenue Growth',\n  requiresPlan: [INVESTOR],\n  shortLabel: 'YoY Rev. Grow',\n  transform: percentageTransform,\n}\n\n/**\n * ====================\n * Available Alerting Metrics\n * ====================\n */\nexport const alertMetrics = [\n  changePercent,\n  change,\n  latestPrice,\n  marketCap,\n  peRatio,\n  day14RSI,\n  peRatio,\n]\n\nexport const getAlertMetricById = (id) =>\n  alertMetrics.find((item) => isEqual(item.id, id)) || changePercent\n\nexport const screenableMetrics = {\n  popular: [\n    changePercent,\n    latestPrice,\n    marketCap,\n    peRatio,\n    revenue,\n    day14RSI,\n    YoYRevenueGrowth,\n    YoYEPSGrowth,\n  ],\n  EEONPerformanceScores: [\n    EEONGrowthScore,\n    EEONMomentumScore,\n    EEONRuleOf40Score,\n    EEONValueScore,\n    EEONProfitabilityScore,\n    EEONSafetyScore,\n  ],\n  performance: [\n    day5ChangePercent,\n    month1ChangePercent,\n    month3ChangePercent,\n    month6ChangePercent,\n    ytdChangePercent,\n    year1ChangePercent,\n    year2ChangePercent,\n    year5ChangePercent,\n    beta,\n    volume,\n  ],\n  profitability: [profitMargin, ttmReturnOnAssets, ttmReturnOnEquity],\n  value: [\n    dividendYield,\n    forwardPERatio,\n    // pegRatio,\n    priceToSales,\n    priceToBook,\n    earningsYield,\n    enterpriseValue,\n    revenuePerEmployee,\n    revenuePerShare,\n  ],\n  // cashFlowOps\n  // employees\n  // enterpriseValue/revenue\n  // netIncome\n  // operatingExpense\n  // Research & Development\n  // totalAssets\n  // totalCash\n  // totalDebt\n}\n\nexport const screenableMetricsList = flatten(values(screenableMetrics))\n\nexport const getScreenableMetricById = (id) =>\n  screenableMetricsList.find((item) => isEqual(item.id, id)) || changePercent\n\n/**\n * List types\n */\nexport const listTypes = {\n  EEON_SCREENERLIST: 'eeonScreenerlist',\n  EEON_WATCHLIST: 'eeonWatchlist',\n  USER_SCREENERLIST: 'userScreenerlist',\n  USER_WATCHLIST: 'userWatchlist',\n}\n\n/**\n * Checks if a list is an EEON list\n */\nexport const isEEONList = (list = {}) => !has(list, ['userId'])\n\n/**\n * Checks if a list is a User list\n */\nexport const isUserList = (list = {}) => has(list, ['userId'])\n\n/**\n * Checks if a list has criteria (and is a Screener)\n */\nexport const isListScreener = (list = {}) => has(list, 'criteria')\n\n/**\n * Checks if a list has a holdings count (and is a Watchlist)\n */\nexport const isListWatchlist = (list = {}) => has(list, 'holdingsCount')\n","import _ from 'lodash'\n\nconst macroTypes = {\n  FACTOR: 'Factor',\n  INDEX: 'Index',\n  SECTOR: 'Sector',\n}\n\nexport const macros = {\n  factors: [\n    {\n      symbol: 'MTUM',\n      label: 'Momentum',\n      shortLabel: 'Momentum',\n      type: macroTypes.FACTOR,\n    },\n    {\n      symbol: 'VB',\n      label: 'Small Cap.',\n      shortLabel: 'Small Cap.',\n      type: macroTypes.FACTOR,\n    },\n    {\n      symbol: 'VIG',\n      label: 'Dividend Appreciation',\n      shortLabel: 'Div. Apprec.',\n      type: macroTypes.FACTOR,\n    },\n    {\n      symbol: 'VTV',\n      label: 'Value',\n      shortLabel: 'Value',\n      type: macroTypes.FACTOR,\n    },\n    {\n      symbol: 'VUG',\n      label: 'Large Cap Growth',\n      shortLabel: 'Large Cap. Growth',\n      type: macroTypes.FACTOR,\n    },\n    {\n      symbol: 'VYM',\n      label: 'High Dividend',\n      shortLabel: 'High Div.',\n      type: macroTypes.FACTOR,\n    },\n  ],\n  indices: [\n    {\n      symbol: 'SPY',\n      label: 'S&P 500',\n      shortLabel: 'S&P 500',\n      type: macroTypes.INDEX,\n    },\n    {\n      symbol: 'DIA',\n      label: 'Dow Jones',\n      shortLabel: 'Dow Jones',\n      type: macroTypes.INDEX,\n    },\n    {\n      symbol: 'IWM',\n      label: 'Russell 2K',\n      shortLabel: 'Russell 2K',\n      type: macroTypes.INDEX,\n    },\n    {\n      symbol: 'IWF',\n      label: 'Russell 1K',\n      shortLabel: 'Russell 1K',\n      type: macroTypes.INDEX,\n    },\n    {\n      symbol: 'QQQ',\n      label: 'NASDAQ 100 ',\n      shortLabel: 'NASDAQ 100',\n      type: macroTypes.INDEX,\n    },\n    {\n      symbol: 'VTI',\n      label: 'Total Stock Market',\n      shortLabel: 'Total Market',\n      type: macroTypes.INDEX,\n    },\n  ],\n  sectors: [\n    {\n      symbol: 'XLB',\n      label: 'Materials',\n      shortLabel: 'Materials',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLE',\n      label: 'Energy',\n      shortLabel: 'Energy',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLF',\n      label: 'Financials',\n      shortLabel: 'Financials',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLI',\n      label: 'Industrials',\n      shortLabel: 'Industrials',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLV',\n      label: 'Healthcare',\n      shortLabel: 'Healthcare',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLC',\n      label: 'Communications',\n      shortLabel: 'Comms.',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLY',\n      label: 'Cons. Discretionary',\n      shortLabel: 'Cons. Disc.',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLP',\n      label: 'Cons. Staples',\n      shortLabel: 'Cons. Staples',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLU',\n      label: 'Utilities',\n      shortLabel: 'Utilities',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLK',\n      label: 'Technology',\n      shortLabel: 'Tech',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'XLRE',\n      label: 'Real Estate',\n      shortLabel: 'Real Estate',\n      type: macroTypes.SECTOR,\n    },\n    {\n      symbol: 'GDX',\n      label: 'Gold',\n      shortLabel: 'Gold',\n      type: macroTypes.SECTOR,\n    },\n  ],\n}\n\nexport const macrosList = [\n  ...macros.indices,\n  ...macros.sectors,\n  ...macros.factors,\n]\n\nexport const getMacroBySymbol = (symbol) => _.find(macrosList, { symbol })\n","import { keymirrorUpper } from '../_private'\n\nexport const equalityPredicates = keymirrorUpper({\n  GREATER_THAN: null,\n  LESS_THAN: null,\n})\n","export const scoreKeys = {\n  COMPUTED_COMPOSITE_SCORE: 'computedCompositeScore',\n  COMPUTED_GROWTH_SCORE: 'computedGrowthScore',\n  COMPUTED_MOMENTUM_SCORE: 'computedMomentumScore',\n  COMPUTED_PERFORMANCE_SCORE: 'computedPerformanceScore',\n  COMPUTED_PROFITABILITY_SCORE: 'computedProfitabilityScore',\n  COMPUTED_RISK_SCORE: 'computedRiskScore',\n  COMPUTED_VALUE_SCORE: 'computedValueScore',\n}\n","import { keymirrorUpper } from '../_private'\n\nexport const capabilities = keymirrorUpper({\n  LISTS: null,\n  PEOPLE: null,\n  SECURITIES: null,\n  TAGS: null,\n})\n","import { keymirrorUpper } from '../_private'\n\nexport const sortOrders = keymirrorUpper({\n  ASC: null,\n  DESC: null,\n})\n","import get from 'lodash/get'\nimport isArray from 'lodash/isArray'\nimport isEqual from 'lodash/isEqual'\nimport toLower from 'lodash/toLower'\nimport toUpper from 'lodash/toUpper'\nimport mapValues from 'lodash/fp/mapValues'\nimport every from 'lodash/fp/every'\nimport map from 'lodash/fp/map'\nimport fget from 'lodash/fp/get'\nimport pipe from 'lodash/fp/pipe'\nimport keymirror from 'keymirror'\n\nconst convertValuesToLower = mapValues(toLower)\n\nconst convertValuesToUpper = mapValues(toUpper)\n\nexport const eachIsTuple = (list = []) => {\n  if (!isArray(list)) {\n    throw new Error('Input is not iterable')\n  }\n  return every((item) => isArray(item) && isEqual(item.length, 2))(list)\n}\n\nexport const extractFieldFromList = (field) => map(fget(field))\n\nexport const extractIdsFromList = extractFieldFromList('id')\n\nexport const extractSymbolsFromList = extractFieldFromList('symbol')\n\nexport const hasLength = (val = []) => {\n  if (!isArray(val) && !isString(val)) {\n    throw new Error('Input must be a number or string')\n  }\n  return val.length > 0\n}\n\nexport const keymirrorLower = pipe(keymirror, convertValuesToLower)\n\nexport const keymirrorUpper = pipe(keymirror, convertValuesToUpper)\n\nexport const pickWithInitialState = (data = {}, valuesToRetrieve = []) => {\n  if (!isArray(valuesToRetrieve) || !eachIsTuple(valuesToRetrieve)) {\n    throw new Error('Selector must be a list of tuples')\n  }\n  return valuesToRetrieve.reduce((acc, valueToRetrieve) => {\n    const [key, initialState] = valueToRetrieve\n    acc[key] = get(data, key, initialState)\n    return acc\n  }, {})\n}\n"],"names":["convertToMS","value","1m","2m","3m","4m","5m","15m","1h","4h","6h","8h","12h","1D","5D","10D","14D","1M","6M","isEnabled","fIsEqual","isIEXSandbox","env","process","isEqual","get","numbro","require","registerLanguage","abbreviations","thousand","million","billion","trillion","currency","symbol","position","code","delimiters","thousands","decimal","languageTag","ordinal","setLanguage","formatNumberNicely","args","percentage","rest","isNull","isUndefined","isFunction","formatCurrency","format","output","isEven","isGreaterThanZero","pipe","toNumber","gt","isLessThanZero","lt","isOdd","complement","isZero","rawValue","Math","abs","prefix","unformatter","uppercased","toUpper","includes","trimmed","replace","unformat","convertValuesToLower","mapValues","toLower","convertValuesToUpper","keymirrorLower","keymirror","keymirrorUpper","AMC","BTO","OTHER","ANNUAL","QUARTERLY","AD","RE","CE","SI","LP","CS","ET","WT","OEF","CEF","PS","FIVE_DAYS","FIVE_YEARS","ONE_MONTH","ONE_YEAR","SIX_MONTHS","THREE_MONTHS","TWO_YEARS","YTD","calculateDerivedSecurityMetrics","calculateEEONPerformanceScores","calculateMacroIndicators","calculateMarketInsights","calculateSecurityInsights","collectFinancialStatementsUponEarnings","fetchUpcomingEvents","primeCache","runPreMarketJobs","runDailyEEONScreenerlists","runDailyUserScreenerlists","runHourlyEEONScreenerlists","runHourlyUserScreenerlists","sendRealtimeSecurities","sendUserSecurityAlertMessages","storeRealtimeData","triggerUserSecurityAlerts","stripeCardStatuses","CANCELED","CHARGEABLE","CONSUMED","FAILED","PENDING","stripeCouponDurations","FOREVER","ONCE","REPEATING","stripePlans","BASIC","INVESTOR","ACTIVE","INCOMPLETED_EXPIRED","INCOMPLETE","PAST_DUE","TRIALING","UNPAID","createPercentageValueBucket","label","formattedValue","mantissa","createEEONPerformanceScoreValueBucket","toString","multiply","createNumericValueBucket","priceValueBucketsOverrides","average","createIdentityValueBucket","betaValueBuckets","dividendYieldValueBuckets","earningsYieldValueBuckets","EBITDAValueBuckets","EEONPerformanceScoresValueBuckets","employeesValueBuckets","marketCapValueOverrides","marketCapValueBuckets","pegRatioValueBuckets","peRatioValueBuckets","percentageValueBuckets","priceValueBuckets","priceToBookValueBuckets","profitMarginValueBuckets","revenueValueBucketOverrides","revenueValueBuckets","revenuePerEmployeeValueBucketOverrides","revenuePerEmployeeValueBuckets","revenuePerShareValueBucketOverrides","revenuePerShareValueBuckets","RSIValueBuckets","ttmEPSValueBuckets","volumeValueBuckets","metricRelations","ADVANCED_STATS","DERIVED_SECURITY_METRICS","EEON_PERFORMANCE_SCORES","KEY_STATS","QUOTE","TECHNICAL_INDICATORS","averageTransform","averageCurrencyTransform","betaTransform","currencyTransform","percentageTransform","percentageValueTransform","toValue","ratioTransform","volumeTransform","totalLength","EEONPerformanceScoreUnformatter","number","divide","avg10Volume","valueBuckets","databaseModelName","id","requiresPlan","shortLabel","transform","avg30Volume","beta","change","changePercent","close","currentDebt","day14RSI","day30ChangePercent","day5ChangePercent","day50MovingAvg","day200MovingAvg","debtToEquity","dividendYield","earningsYield","EBITDA","EEONGrowthScore","EEONMomentumScore","EEONProfitabilityScore","EEONRuleOf40Score","EEONSafetyScore","EEONValueScore","employees","enterpriseValue","enterpriseValueToRevenue","extendedChangePercent","forwardPERatio","grossProfit","high","latestPrice","low","marketCap","month1ChangePercent","month3ChangePercent","month6ChangePercent","open","peRatio","pegRatio","previousClose","previousVolume","priceToBook","priceToSales","profitMargin","revenue","revenuePerEmployee","revenuePerShare","sharesOutstanding","ttmEPS","totalCash","totalRevenue","ttmReturnOnAssets","ttmReturnOnEquity","volume","week52change","week52High","week52Low","year1ChangePercent","year2ChangePercent","year5ChangePercent","ytdChangePercent","YoYEPSGrowth","YoYRevenueGrowth","alertMetrics","screenableMetrics","popular","EEONPerformanceScores","performance","profitability","screenableMetricsList","flatten","values","find","item","EEON_SCREENERLIST","EEON_WATCHLIST","USER_SCREENERLIST","USER_WATCHLIST","list","has","macros","factors","type","indices","sectors","macrosList","_","GREATER_THAN","LESS_THAN","COMPUTED_COMPOSITE_SCORE","COMPUTED_GROWTH_SCORE","COMPUTED_MOMENTUM_SCORE","COMPUTED_PERFORMANCE_SCORE","COMPUTED_PROFITABILITY_SCORE","COMPUTED_RISK_SCORE","COMPUTED_VALUE_SCORE","LISTS","PEOPLE","SECURITIES","TAGS","ASC","DESC","eachIsTuple","isArray","Error","every","length","extractFieldFromList","field","map","fget","extractIdsFromList","extractSymbolsFromList","val","isString","data","valuesToRetrieve","reduce","acc","valueToRetrieve","key"],"mappings":"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"}